meta {
  name: Request Password Reset
  type: http
  seq: 4
}

post {
  url: {{base-url}}/auth/request-password-reset
  body: json
  auth: none
}

body:json {
  {
    "email": "john.doe@example.com"
  }
}

assert {
  res.status: eq 200
  res.body.message: isDefined
}

tests {
  test("should return 200 status", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("should return success message", function() {
    expect(res.getBody().message).to.include('password reset');
  });
  
  test("should not reveal if email exists (security)", function() {
    // Should always return same message whether email exists or not
    expect(res.getBody().message).to.exist;
  });
}

docs {
  # Request Password Reset
  
  Sends a password reset email to the user if the email exists.
  For security, always returns success message even if email doesn't exist.
}
