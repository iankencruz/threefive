// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package generated

import (
	"github.com/google/uuid"
	blocks "github.com/iankencruz/threefive/internal/core/blocks"
	"github.com/jackc/pgx/v5/pgtype"
)

type Media struct {
	ID           uuid.UUID          `db:"id" json:"id"`
	Url          string             `db:"url" json:"url"`
	ThumbnailUrl *string            `db:"thumbnail_url" json:"thumbnail_url"`
	Type         string             `db:"type" json:"type"`
	IsPublic     *bool              `db:"is_public" json:"is_public"`
	Title        *string            `db:"title" json:"title"`
	AltText      *string            `db:"alt_text" json:"alt_text"`
	MimeType     *string            `db:"mime_type" json:"mime_type"`
	FileSize     *int32             `db:"file_size" json:"file_size"`
	SortOrder    int32              `db:"sort_order" json:"sort_order"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	MediumUrl    *string            `db:"medium_url" json:"medium_url"`
}

type Page struct {
	ID             uuid.UUID          `db:"id" json:"id"`
	Slug           string             `db:"slug" json:"slug"`
	Title          string             `db:"title" json:"title"`
	CoverImageID   pgtype.UUID        `db:"cover_image_id" json:"cover_image_id"`
	SeoTitle       *string            `db:"seo_title" json:"seo_title"`
	SeoDescription *string            `db:"seo_description" json:"seo_description"`
	SeoCanonical   *string            `db:"seo_canonical" json:"seo_canonical"`
	Content        []blocks.Block     `db:"content" json:"content"`
	IsDraft        *bool              `db:"is_draft" json:"is_draft"`
	IsPublished    *bool              `db:"is_published" json:"is_published"`
	CreatedAt      pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type Project struct {
	ID              uuid.UUID          `db:"id" json:"id"`
	Title           string             `db:"title" json:"title"`
	Slug            string             `db:"slug" json:"slug"`
	Description     *string            `db:"description" json:"description"`
	MetaDescription *string            `db:"meta_description" json:"meta_description"`
	CanonicalUrl    *string            `db:"canonical_url" json:"canonical_url"`
	CoverMediaID    pgtype.UUID        `db:"cover_media_id" json:"cover_media_id"`
	IsPublished     bool               `db:"is_published" json:"is_published"`
	PublishedAt     pgtype.Timestamptz `db:"published_at" json:"published_at"`
	CreatedAt       pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt       pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type ProjectMedium struct {
	ProjectID uuid.UUID `db:"project_id" json:"project_id"`
	MediaID   uuid.UUID `db:"media_id" json:"media_id"`
	SortOrder int32     `db:"sort_order" json:"sort_order"`
}

type Session struct {
	Token     string             `db:"token" json:"token"`
	UserID    uuid.UUID          `db:"user_id" json:"user_id"`
	UserAgent *string            `db:"user_agent" json:"user_agent"`
	ExpiresAt pgtype.Timestamptz `db:"expires_at" json:"expires_at"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type SessionData struct {
	Token string  `db:"token" json:"token"`
	Key   string  `db:"key" json:"key"`
	Value *string `db:"value" json:"value"`
}

type User struct {
	ID           uuid.UUID          `db:"id" json:"id"`
	FirstName    string             `db:"first_name" json:"first_name"`
	LastName     string             `db:"last_name" json:"last_name"`
	Email        string             `db:"email" json:"email"`
	PasswordHash string             `db:"password_hash" json:"-"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}
