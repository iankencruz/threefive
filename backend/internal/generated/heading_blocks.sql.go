// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: heading_blocks.sql

package generated

import (
	"context"

	"github.com/google/uuid"
)

const createHeadingBlock = `-- name: CreateHeadingBlock :exec
INSERT INTO heading_block (block_id, title, description)
VALUES ($1, $2, $3)
`

type CreateHeadingBlockParams struct {
	BlockID     uuid.UUID `db:"block_id" json:"block_id"`
	Title       string    `db:"title" json:"title"`
	Description *string   `db:"description" json:"description"`
}

func (q *Queries) CreateHeadingBlock(ctx context.Context, arg CreateHeadingBlockParams) error {
	_, err := q.db.Exec(ctx, createHeadingBlock, arg.BlockID, arg.Title, arg.Description)
	return err
}

const deleteHeadingBlock = `-- name: DeleteHeadingBlock :exec
DELETE FROM heading_block WHERE block_id = $1
`

func (q *Queries) DeleteHeadingBlock(ctx context.Context, blockID uuid.UUID) error {
	_, err := q.db.Exec(ctx, deleteHeadingBlock, blockID)
	return err
}

const getHeadingBlock = `-- name: GetHeadingBlock :one
SELECT block_id, title, description FROM heading_block WHERE block_id = $1
`

func (q *Queries) GetHeadingBlock(ctx context.Context, blockID uuid.UUID) (HeadingBlock, error) {
	row := q.db.QueryRow(ctx, getHeadingBlock, blockID)
	var i HeadingBlock
	err := row.Scan(&i.BlockID, &i.Title, &i.Description)
	return i, err
}

const updateHeadingBlock = `-- name: UpdateHeadingBlock :exec
UPDATE heading_block
SET title = $1,
    description = $2
WHERE block_id = $3
`

type UpdateHeadingBlockParams struct {
	Title       string    `db:"title" json:"title"`
	Description *string   `db:"description" json:"description"`
	BlockID     uuid.UUID `db:"block_id" json:"block_id"`
}

func (q *Queries) UpdateHeadingBlock(ctx context.Context, arg UpdateHeadingBlockParams) error {
	_, err := q.db.Exec(ctx, updateHeadingBlock, arg.Title, arg.Description, arg.BlockID)
	return err
}
