// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: richtext_blocks.sql

package generated

import (
	"context"

	"github.com/google/uuid"
)

const createRichTextBlock = `-- name: CreateRichTextBlock :exec
INSERT INTO richtext_block (block_id, html)
VALUES ($1, $2)
`

type CreateRichTextBlockParams struct {
	BlockID uuid.UUID `db:"block_id" json:"block_id"`
	Html    string    `db:"html" json:"html"`
}

func (q *Queries) CreateRichTextBlock(ctx context.Context, arg CreateRichTextBlockParams) error {
	_, err := q.db.Exec(ctx, createRichTextBlock, arg.BlockID, arg.Html)
	return err
}

const deleteRichTextBlock = `-- name: DeleteRichTextBlock :exec
DELETE FROM richtext_block
WHERE block_id = $1
`

func (q *Queries) DeleteRichTextBlock(ctx context.Context, blockID uuid.UUID) error {
	_, err := q.db.Exec(ctx, deleteRichTextBlock, blockID)
	return err
}

const getRichTextBlock = `-- name: GetRichTextBlock :one
SELECT block_id, html FROM richtext_block
WHERE block_id = $1
`

func (q *Queries) GetRichTextBlock(ctx context.Context, blockID uuid.UUID) (RichtextBlock, error) {
	row := q.db.QueryRow(ctx, getRichTextBlock, blockID)
	var i RichtextBlock
	err := row.Scan(&i.BlockID, &i.Html)
	return i, err
}

const updateRichTextBlock = `-- name: UpdateRichTextBlock :exec
UPDATE richtext_block
SET html = $1
WHERE block_id = $2
`

type UpdateRichTextBlockParams struct {
	Html    string    `db:"html" json:"html"`
	BlockID uuid.UUID `db:"block_id" json:"block_id"`
}

func (q *Queries) UpdateRichTextBlock(ctx context.Context, arg UpdateRichTextBlockParams) error {
	_, err := q.db.Exec(ctx, updateRichTextBlock, arg.Html, arg.BlockID)
	return err
}
